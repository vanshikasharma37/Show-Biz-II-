@model ViewModel.ActorMediaItemAddFormViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="h1 fw-normal">Add Media Item for @Model.ActorName</h1>
<hr/>


@using (Html.BeginForm("Create", "ActorMediaItem", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ActorId)

        <div class="row mb-3">
            @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.ContentUpload, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.ContentUpload, new { type = "file", @class = "form-control", @accept = ".jpg,.jpeg,.png,.pdf,.mp3,.mp4" })
                @Html.ValidationMessageFor(model => model.ContentUpload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <input type="submit" value="Create" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}